ungroup() %>%
ggplot(aes(x = rating_ind, y = mconf)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width = 0.2) +
geom_smooth(aes(x = as.numeric(rating_ind), y = mconf), inherit.aes = F,
method="lm", formula = (y~exp(x)), color=alpha("red", 0.66), se=F) +
geom_point(alpha =0.2) +
labs(x = 'Rated Restaurant Ranking', y = 'Mean Confidence') +
theme_bw()
ggarrange(bestchoice_plot, confidence_choice_plot,
bestratings_plot, confidence_rating_plot,
nrow=2, ncol=2,
labels = LETTERS[1:4])
# NAIVE NORMALIZATION ####
for(i in 1:nrow(d)) {
r = as.numeric(unlist(strsplit(d$stars[i], split=',')))
if(d$trial_type[i] =='choice') {
d[i, 'target'] = max(r)
if(length(unique(r)) > 1) {
d[i, 'target_neighbour'] = max(r[r!=max(r)])
d[i, 'distractor'] = mean(r[r!=max(r)])
}
}
}
naivenormal_overall <-
d %>%
filter(trial_type == 'choice') %>%
group_by(distractor) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ggplot(aes(x = distractor, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
geom_smooth(aes(x = distractor, y = ptarget), inherit.aes = F, method="lm", color=alpha("red", 0.66), se=F) +
geom_point(alpha=0.2) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(x = 'Average Distractor Rating', y = '% Target Chosen', title = 'Naive Normalization') +
theme_bw()
naivenormal_plot_by_set <-
d %>%
filter(trial_type == 'choice') %>%
mutate(num_options = factor(paste0('Set size = ', num_options))) %>%
group_by(num_options, distractor) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ggplot(aes(x = distractor, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
geom_smooth(aes(x = distractor, y = ptarget, group = num_options), inherit.aes = F, method="lm", color=alpha("red", 0.66), se=F) +
geom_point(alpha=0.2) +
facet_grid(~num_options) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(x = 'Average Distractor Rating', y = '% Target Chosen', title = 'By Set Size') +
theme_bw()
ggarrange(naivenormal_overall, naivenormal_plot_by_set,
nrow = 2, labels = LETTERS[1:2])
# UNEXPECTED CHOICES ####
# ONE-STARS CHOSEN
onestar <-
d %>%
filter(trial_type == 'choice') %>%
filter(chosen_rating ==1) %>%
group_by(chosen_name) %>%
summarise(n= n()) %>%
ggplot(aes(x = reorder(chosen_name, -n), y = n)) +
stat_summary(fun.y = mean, geom='bar', position=position_dodge(0.9)) +
labs(x = '', y = 'Count', title = '1-Star Chosen Restaurants') +
theme_bw()
# EACH SET LIKELIHOOD OF CHOOSING LOWEST
plowest_plot <-
d %>%
filter(trial_type=='choice') %>%
group_by(names) %>%
summarise(plow = sum(choice_ind == length(strsplit(stars, split=',')[[1]]))/length(choice_ind)) %>%
mutate(name_ind = 1:length(names),
label = ifelse(plow > 0.5, names, '')) %>%
filter(plow > 0.15) %>%
{ggplot(., aes(x = reorder(name_ind, -plow), y = plow, fill = label)) +
geom_col() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(
breaks=unique(.$label)[2:5],
values=c('grey50', colorRampPalette(c("blue", "red"))(4))) +
labs(x = 'Choice set (index)', y = '% Lowest Rated Chosen', fill = 'Worst Offenders') +
theme_bw() + theme(legend.position = 'bottom')}
ggarrange(onestar, plowest_plot, labels = LETTERS[1:2])
lowest_choices = d[d$names %in% plowest_plot$data$label & d$trial_type=='choice',]
# POST-MEETING ANALYSIS ####
# MEAN STAR x pTARGET
naivenormal_plot_meanstar <-
d %>%
filter(trial_type == 'choice') %>%
group_by(mean_rating) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ggplot(aes(x = mean_rating, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
geom_smooth(aes(x = mean_rating, y = ptarget), inherit.aes = F, method="lm", color=alpha("red", 0.66), se=F) +
geom_point(alpha=0.2) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(x = 'Average Star Rating (inc. Target)', y = '% Target Chosen', title = 'Naive Normalization') +
theme_bw()
# VALUE DEVIANCE
value_deviance_plot <-
d %>%
filter(trial_type == 'choice',
is.na(target_neighbour)==F) %>%
mutate(target_neighbour= factor(target_neighbour)) %>%
group_by(mean_rating, target_neighbour) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ggplot(aes(x = mean_rating, y = ptarget, color=target_neighbour)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
geom_smooth(aes(x = mean_rating, y = ptarget, color=target_neighbour), inherit.aes = F, method="lm", color=alpha("red", 0.66), se=F) +
facet_grid(~target_neighbour) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(x = 'Average Star Rating (inc. Target)', y = '% Target Chosen', color='2nd Best Star Rating') +
theme_bw()
# only plot one-star distance
d$one_star_deviance = ifelse(d$target - d$target_neighbour == 1, T, F)
deviance_one_star_plot <-
d %>%
filter(trial_type == 'choice',
is.na(target_neighbour)==F,
one_star_deviance == T) %>%
group_by(mean_rating) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ggplot(aes(x = mean_rating, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
geom_smooth(aes(x = mean_rating, y = ptarget), inherit.aes = F, method="lm", color=alpha("red", 0.66), se=F) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(x = 'Average Star Rating (inc. Target)', y = '% Target Chosen',
title='Naive normalization where 2nd best rating is one-star away from target') +
theme_bw()
# try mean distance from target
mean_deviance_plot <-
d %>%
group_by(id, stars) %>%
mutate(meandist = mean(as.numeric(strsplit(stars, split=',')[[1]]) -
max(as.numeric(strsplit(stars, split=',')[[1]])))) %>%
group_by(id, meandist) %>%
summarise(ptarget = sum(choice_ind == 1, na.rm=T)/length(choice_ind)) %>%
ggplot(aes(x = meandist, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
geom_smooth(aes(x = meandist, y = ptarget), inherit.aes = F, method="lm", color=alpha("red", 0.66), se=F) +
geom_smooth(aes(x = meandist, y = ptarget), inherit.aes = F, method="lm",
formula= y ~ x + I(x^2), color=alpha("blue", 0.66), se=F) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(x = 'Average Deviance from Target', y = '% Target Chosen',
title='mean(value - target)') +
theme_bw()
# Z-SCORED RATINGS
stars_rating_plot_z <-
d %>%
filter(trial_type == 'rating') %>%
group_by(id) %>%
mutate(z_rating = (rating-mean(rating))/sd(rating)) %>%
group_by(id, chosen_rating) %>%
summarise(mrating = mean(z_rating)) %>%
ggplot(aes(x = chosen_rating, y = mrating)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width = 0.2) +
geom_smooth(aes(x = chosen_rating, y = mrating), inherit.aes = F,
method="lm", color=alpha("red", 0.66), se=F) +
geom_point(alpha=0.2) +
labs(x = 'Stars', y = 'Mean z-Satisfaction') +
theme_bw()
price_rating_plot_z <-
d %>%
filter(trial_type == 'rating') %>%
group_by(id) %>%
mutate(z_rating = (rating-mean(rating))/sd(rating)) %>%
group_by(id, chosen_price) %>%
summarise(mrating = mean(z_rating)) %>%
ggplot(aes(x = as.factor(chosen_price), y = mrating)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width = 0.2) +
geom_point(alpha=0.2) +
labs(x = 'Price', y = 'Mean z-Satisfaction') +
theme_bw()
nrev_rating_plot_z <-
d %>%
filter(trial_type == 'rating') %>%
group_by(id) %>%
mutate(z_rating = (rating-mean(rating))/sd(rating),
bin_nrev = ntile(chosen_nrev, 4)) %>%
group_by(id, bin_nrev) %>%
summarise(mrating = mean(z_rating)) %>%
ggplot(aes(x = bin_nrev, y = mrating)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width = 0.2) +
geom_point(alpha=0.2) +
labs(x = 'Number of Reviews (Binned)', y = 'Mean z-Satisfaction') +
theme_bw()
ggarrange(stars_rating_plot_z,
price_rating_plot_z,
nrev_rating_plot_z,
labels = LETTERS[1:3],
nrow=1)
# BINNED STARS PLOT
binned_star_plots_inc_target <-
d %>%
filter(trial_type == 'choice') %>%
group_by(id, mean_rating, num_options) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ungroup() %>%
mutate(star_bin = ntile(mean_rating, 4)) %>%
ggplot(aes(x = star_bin, y = ptarget, color = factor(num_options))) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width = 0.2) +
stat_summary(fun.y = mean, geom='line', position = position_dodge(0.9)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)) +
labs(x = 'Mean Star With Choice (Binned)', y = '% Target Chosen', color='Set Size') +
theme_bw()
binned_star_plots_exc_chosen <-
d %>%
filter(trial_type == 'choice') %>%
mutate(mean_without_choice = (mean_rating*num_options - chosen_rating)/(num_options-1)) %>%
group_by(id, mean_without_choice, num_options) %>%
summarise(ptarget = sum(choice_ind == 1)/length(choice_ind)) %>%
ungroup() %>%
mutate(star_bin = ntile(mean_without_choice, 4)) %>%
ggplot(aes(x = star_bin, y = ptarget, color=factor(num_options))) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width = 0.2) +
stat_summary(fun.y = mean, geom='line', position = position_dodge(0.9)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)) +
labs(x = 'Mean Stars Without Choice (Binned)', y = '% Target Chosen', color='Set Size') +
theme_bw()
ggarrange(binned_star_plots_inc_target, binned_star_plots_exc_chosen,
ncol = 2, labels = c('A', 'B'), common.legend = T, legend='bottom')
# CHECK RTS FOR FUN ####
rtplot <-
d %>%
filter(trial_type == 'choice') %>%
group_by(id, mean_rating) %>%
summarise(mrt = mean(targetrt)) %>%
ungroup() %>%
mutate(star_bin = ntile(mean_rating, 8)) %>%
group_by(star_bin) %>%
mutate(star_bin_lab = mean(mean_rating)) %>%
ggplot(aes(x = star_bin_lab, y = mrt)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position = position_dodge(0.9)) +
labs(x = 'Mean Star Rating (Binned)', y = 'Mean RT (in ms.)') +
theme_bw()
# break rt apart by distance of 2nd best choice
for(i in 1:nrow(d)) {
stars = sort(as.numeric(strsplit(d$stars[i], split=',')[[1]]), decreasing = T)
target_r <- stars[1]
second_best <- stars[2]
d[i,'first_second_distance'] <- target_r - second_best
}
first_second <-
d %>%
group_by(trial_type, id, first_second_distance) %>%
summarise(mrt = mean(targetrt)) %>%
ggplot(aes(x = factor(first_second_distance), y = mrt)) +
stat_summary(fun.y = mean, geom='bar', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
facet_wrap(~trial_type) +
ylim(c(0, 10000)) +  # remove outliers
labs(x = 'Distance Between Target and 2nd Highest Rating', y = 'Mean RT (in ms.)') +
theme_bw()
rt_conf <-
d %>%
group_by(id, trial_type, confidence) %>%
summarise(mrt = mean(targetrt)) %>%
ggplot(aes(x = confidence, y=mrt)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position = position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Confidence', y = 'Mean RT (in ms.)') +
theme_bw()
ggarrange(first_second, rt_conf, labels = LETTERS[1:2])
# TENTATIVE ANALYSIS ####
library(lme4)
d$target_chosen = ifelse(d$choice_ind == 1, 1, 0)
# CHOICE TRIALS
choice_m <-
d %>%
filter(trial_type == 'choice') %>%
glmer(target_chosen ~ mean_rating + chosen_nrev + chosen_price +
(mean_rating + chosen_nrev + chosen_price|id),
family = 'binomial', data=.)
d %>%
group_by(trial_type, id, first_second_distance) %>%
summarise(mrt = mean(confidence))
d %>%
group_by(trial_type, id, first_second_distance) %>%
summarise(mconf = mean(confidence)) %>%
ggplot(aes(x = factor(first_second_distance), y = mconf)) +
stat_summary(fun.y = mean, geom='bar', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
facet_wrap(~trial_type) +
labs(x = 'Distance Between Target and 2nd Highest Rating', y = 'Mean Confidence') +
theme_bw()
d %>%
group_by(trial_type, id, first_second_distance) %>%
summarise(mconf = mean(confidence)) %>%
ggplot(aes(x = factor(first_second_distance), y = mconf)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
geom_point(alpha=0.2) +
facet_wrap(~trial_type) +
labs(x = 'Distance Between Target and 2nd Highest Rating', y = 'Mean Confidence') +
theme_bw()
d %>%
group_by(trial_type, id, first_second_distance) %>%
summarise(mconf = mean(confidence)) %>%
ggplot(aes(x = first_second_distance, y = mconf)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Distance Between Target and 2nd Highest Rating', y = 'Mean Confidence') +
theme_bw()
length(unique(d$names))
mean(d$targetrt)
mean(d$targetrt)/1000
mean(d$targetrt[d$trial_type=='choice'])/1000
sd(d$targetrt[d$trial_type=='choice'])/1000
sd(d$targetrt[d$trial_type=='choice'])
sd(d$targetrt[d$trial_type=='choice'])/1000
mean(d$targetrt[d$trial_type=='rating'])/1000
d %>%
group_by(id, trial_type) %>%
mutate(z_rt = (targetrt- mean(targetrt))/sd(targetrt),
z_rt_log = log(z_rt)) %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log))
x =   d %>%
group_by(id, trial_type) %>%
mutate(z_rt = (targetrt- mean(targetrt))/sd(targetrt),
z_rt_log = log(z_rt))
warnings()
log(-1)
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log))
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log)) %>%
ggplot(aes(x = trial, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Trial', y = 'z-logged RT') +
theme_bw()
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log)) %>%
ggplot(aes(x = trial, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
#stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Trial', y = 'z-logged RT') +
theme_bw()
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
ggplot(aes(x = trial, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Trial', y = 'z-logged RT') +
theme_bw()
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
ggplot(aes(x = trial_bin, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Trial', y = 'z-logged RT') +
theme_bw()
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
group_by(trial_bin) %>%
mutate(trial_bin_lab = mean(trial)) %>%
ggplot(aes(x = trial_bin_lab, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Trial (Binned)', y = 'z-logged RT') +
theme_bw()
d %>%
group_by(id, trial_type) %>%
group_by(id, trial_type, trial) %>%
summarise(ptarget=sum(choice_ind==1)/length(choice_ind)) %>%
mutate(trial_bin = ntile(trial, 5))
d %>%
group_by(id, trial_type) %>%
group_by(id, trial_type, trial) %>%
summarise(ptarget=sum(choice_ind==1)/length(choice_ind)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
group_by(trial_bin) %>%
mutate(trial_bin_lab = mean(trial)) %>%
ggplot(aes(x = trial_bin_lab, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)) +
labs(x = 'Trial (Binned)', y = '% Target Chosen') +
theme_bw()
d %>%
group_by(id, trial_type) %>%
group_by(id, trial_type, trial) %>%
summarise(ptarget=sum(choice_ind==1)/length(choice_ind)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
group_by(trial_bin) %>%
mutate(trial_bin_lab = mean(trial)) %>%
ggplot(aes(x = trial_bin_lab, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)) +
labs(x = 'Trial (Binned)', y = '% Target Chosen') +
theme_bw()
d %>%
filter(trial_type == 'choice') %>%
group_by(id, trial_type, trial) %>%
summarise(ptarget=sum(choice_ind==1)/length(choice_ind)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
group_by(trial_bin) %>%
mutate(trial_bin_lab = mean(trial)) %>%
ggplot(aes(x = trial_bin_lab, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)) +
labs(x = 'Trial (Binned)', y = '% Target Chosen') +
theme_bw()
trial_rt_z_plot <-
d %>%
group_by(id, trial_type) %>%
mutate(z_rt_log = (targetrt- mean(log(targetrt)))/sd(log(targetrt)))  %>%
group_by(id, trial_type, trial) %>%
summarise(m_z_rt_log = mean(z_rt_log)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
group_by(trial_bin) %>%
mutate(trial_bin_lab = mean(trial)) %>%
ggplot(aes(x = trial_bin_lab, y = m_z_rt_log)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
facet_wrap(~trial_type) +
labs(x = 'Trial (Binned)', y = 'z-logged RT') +
theme_bw()
trial_ptarget_plot <-
d %>%
filter(trial_type == 'choice') %>%
group_by(id, trial_type, trial) %>%
summarise(ptarget=sum(choice_ind==1)/length(choice_ind)) %>%
mutate(trial_bin = ntile(trial, 5)) %>%
group_by(trial_bin) %>%
mutate(trial_bin_lab = mean(trial)) %>%
ggplot(aes(x = trial_bin_lab, y = ptarget)) +
stat_summary(fun.y = mean, geom='point', position=position_dodge(0.9)) +
stat_summary(fun.data = mean_se, geom='errorbar', position=position_dodge(0.9), width=0.2) +
stat_summary(fun.y = mean, geom='line', position=position_dodge(0.9)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)) +
labs(x = 'Trial (Binned)', y = '% Target Chosen', title = 'Choice trials only') +
theme_bw()
ggarrange(trial_rt_z_plot, trial_ptarget_plot,
labels = LETTERS[1:2])
modeest::mfv(d$targetrt)
rm(list = ls())
dev.off()
##### SETUP ####
# function to load packages or install if not already installed
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("dplyr", "ggplot2", "grid", 'gridExtra')
ipak(packages)
rm(packages, ipak)
SimData <- read.csv("SimulatedData(noresp).csv")
setwd("~/home/sdevine/Desktop/Ongoing/PICCAgeing/Analysis&Data")
setwd("~/Desktop/Ongoing/PICCAgeing/Analysis&Data")
SimData <- read.csv("SimulatedData(noresp).csv")
list.files()
setwd("~/Desktop/Ongoing/PICCAgeing/Analysis&Data/Simulate")
SimData <- read.csv("SimulatedData(noresp).csv")
